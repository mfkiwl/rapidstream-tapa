"""TAPA Python Verilog transformation build configuration."""

# Copyright (c) 2024 RapidStream Design Automation, Inc. and contributors.
# All rights reserved. The contributor(s) of this file has/have agreed to the
# RapidStream Contributor License Agreement.

load("@rules_python//python:defs.bzl", "py_library")
load("@tapa_deps//:requirements.bzl", "requirement")
load("//bazel:pytest_rules.bzl", "py_test")

package(default_visibility = ["//tapa:__subpackages__"])

py_library(
    name = "ast_types",
    srcs = ["ast_types.py"],
)

py_library(
    name = "ast_utils",
    srcs = ["ast_utils.py"],
    deps = [
        requirement("pyverilog"),
    ],
)

py_library(
    name = "axi_xbar",
    srcs = ["axi_xbar.py"],
    deps = [
        requirement("jinja2"),
    ],
)

py_library(
    name = "ioport",
    srcs = ["ioport.py"],
    deps = [
        "//tapa/common:unique_attrs",
        "//tapa/verilog:pragma",
        "//tapa/verilog:width",
        requirement("pyslang"),
    ],
)

py_test(
    name = "ioport_test",
    srcs = ["ioport_test.py"],
    deps = [
        ":ioport",
        requirement("pyslang"),
    ],
)

py_library(
    name = "logic",
    srcs = ["logic.py"],
)

py_library(
    name = "parameter",
    srcs = ["parameter.py"],
    deps = [
        "//tapa/verilog:width",
        requirement("pyslang"),
    ],
)

py_library(
    name = "pragma",
    srcs = ["pragma.py"],
)

py_library(
    name = "signal",
    srcs = ["signal.py"],
    deps = [
        "//tapa/verilog:width",
        requirement("pyslang"),
        requirement("pyverilog"),
    ],
)

py_library(
    name = "util",
    srcs = ["util.py"],
    deps = [
        "//tapa/verilog:signal",
        "//tapa/verilog:width",
        requirement("pyverilog"),
    ],
)

py_test(
    name = "util_test",
    srcs = ["util_test.py"],
    deps = [
        ":util",
    ],
)

py_library(
    name = "width",
    srcs = ["width.py"],
    deps = [
        requirement("pyslang"),
        requirement("pyverilog"),
    ],
)
