"""TAPA graphir graphir conversion."""

# Copyright (c) 2025 RapidStream Design Automation, Inc. and contributors.
# All rights reserved. The contributor(s) of this file has/have agreed to the
# RapidStream Contributor License Agreement.

load("@rules_python//python:defs.bzl", "py_library")
load("@tapa_deps//:requirements.bzl", "requirement")
load("//bazel:pytest_rules.bzl", "py_test")

py_library(
    name = "graphir_conversion",
    srcs = [
        "__init__.py",
        "gen_rs_graphir.py",
        "utils.py",
    ],
    visibility = [
        "//tapa:__subpackages__",
    ],
    deps = [
        "//tapa:core",
        "//tapa:task",
        "//tapa/graphir",
        requirement("pyverilog"),
    ],
)

py_library(
    name = "leaf_task_conversion_lib",
    srcs = ["leaf_task_conversion_test.py"],
    visibility = [
        "//tapa/graphir_conversion:__subpackages__",
    ],
    deps = ["//tapa/graphir_conversion"],
)

py_test(
    name = "leaf_task_conversion_test",
    srcs = ["leaf_task_conversion_test.py"],
    data = glob([
        "leaf_conversion_test_files/*",
    ]),
    deps = ["//tapa/graphir_conversion"],
)

py_test(
    name = "slot_task_conversion_test",
    srcs = ["slot_task_conversion_test.py"],
    data = glob([
        "slot_conversion_test_files/*",
    ]),
    deps = [
        ":leaf_task_conversion_lib",
        "//tapa:core",
        "//tapa/graphir_conversion",
    ],
)

py_test(
    name = "top_task_conversion_test",
    srcs = ["top_task_conversion_test.py"],
    data = glob([
        "top_conversion_test_files/*",
    ]),
    deps = [
        ":leaf_task_conversion_lib",
        "//tapa:core",
        "//tapa/graphir_conversion",
    ],
)
