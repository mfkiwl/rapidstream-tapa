// ==============================================================
// Generated by Vitis HLS v2024.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps

(* CORE_GENERATION_INFO="ProcElem_ProcElem,hls_ip_2024_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu250-figd2104-2L-e,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.942090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3666,HLS_SYN_LUT=4016,HLS_VERSION=2024_1}" *)

module ProcElem (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_vertices_AWVALID,
        m_axi_vertices_AWREADY,
        m_axi_vertices_AWADDR,
        m_axi_vertices_AWID,
        m_axi_vertices_AWLEN,
        m_axi_vertices_AWSIZE,
        m_axi_vertices_AWBURST,
        m_axi_vertices_AWLOCK,
        m_axi_vertices_AWCACHE,
        m_axi_vertices_AWPROT,
        m_axi_vertices_AWQOS,
        m_axi_vertices_AWREGION,
        m_axi_vertices_AWUSER,
        m_axi_vertices_WVALID,
        m_axi_vertices_WREADY,
        m_axi_vertices_WDATA,
        m_axi_vertices_WSTRB,
        m_axi_vertices_WLAST,
        m_axi_vertices_WID,
        m_axi_vertices_WUSER,
        m_axi_vertices_ARVALID,
        m_axi_vertices_ARREADY,
        m_axi_vertices_ARADDR,
        m_axi_vertices_ARID,
        m_axi_vertices_ARLEN,
        m_axi_vertices_ARSIZE,
        m_axi_vertices_ARBURST,
        m_axi_vertices_ARLOCK,
        m_axi_vertices_ARCACHE,
        m_axi_vertices_ARPROT,
        m_axi_vertices_ARQOS,
        m_axi_vertices_ARREGION,
        m_axi_vertices_ARUSER,
        m_axi_vertices_RVALID,
        m_axi_vertices_RREADY,
        m_axi_vertices_RDATA,
        m_axi_vertices_RLAST,
        m_axi_vertices_RID,
        m_axi_vertices_RUSER,
        m_axi_vertices_RRESP,
        m_axi_vertices_BVALID,
        m_axi_vertices_BREADY,
        m_axi_vertices_BRESP,
        m_axi_vertices_BID,
        m_axi_vertices_BUSER,
        m_axi_edges_AWVALID,
        m_axi_edges_AWREADY,
        m_axi_edges_AWADDR,
        m_axi_edges_AWID,
        m_axi_edges_AWLEN,
        m_axi_edges_AWSIZE,
        m_axi_edges_AWBURST,
        m_axi_edges_AWLOCK,
        m_axi_edges_AWCACHE,
        m_axi_edges_AWPROT,
        m_axi_edges_AWQOS,
        m_axi_edges_AWREGION,
        m_axi_edges_AWUSER,
        m_axi_edges_WVALID,
        m_axi_edges_WREADY,
        m_axi_edges_WDATA,
        m_axi_edges_WSTRB,
        m_axi_edges_WLAST,
        m_axi_edges_WID,
        m_axi_edges_WUSER,
        m_axi_edges_ARVALID,
        m_axi_edges_ARREADY,
        m_axi_edges_ARADDR,
        m_axi_edges_ARID,
        m_axi_edges_ARLEN,
        m_axi_edges_ARSIZE,
        m_axi_edges_ARBURST,
        m_axi_edges_ARLOCK,
        m_axi_edges_ARCACHE,
        m_axi_edges_ARPROT,
        m_axi_edges_ARQOS,
        m_axi_edges_ARREGION,
        m_axi_edges_ARUSER,
        m_axi_edges_RVALID,
        m_axi_edges_RREADY,
        m_axi_edges_RDATA,
        m_axi_edges_RLAST,
        m_axi_edges_RID,
        m_axi_edges_RUSER,
        m_axi_edges_RRESP,
        m_axi_edges_BVALID,
        m_axi_edges_BREADY,
        m_axi_edges_BRESP,
        m_axi_edges_BID,
        m_axi_edges_BUSER,
        req_q_s_dout,
        req_q_s_empty_n,
        req_q_s_read,
        req_q_peek_dout,
        req_q_peek_empty_n,
        req_q_peek_read,
        resp_q_s_din,
        resp_q_s_full_n,
        resp_q_s_write,
        resp_q_peek,
        update_req_q_s_din,
        update_req_q_s_full_n,
        update_req_q_s_write,
        update_req_q_peek,
        update_in_q_s_dout,
        update_in_q_s_empty_n,
        update_in_q_s_read,
        update_in_q_peek_dout,
        update_in_q_peek_empty_n,
        update_in_q_peek_read,
        update_out_q_s_din,
        update_out_q_s_full_n,
        update_out_q_s_write,
        update_out_q_peek,
        vertices_offset,
        edges_offset
);

parameter    ap_ST_fsm_state1 = 28'd1;
parameter    ap_ST_fsm_state2 = 28'd2;
parameter    ap_ST_fsm_state3 = 28'd4;
parameter    ap_ST_fsm_state4 = 28'd8;
parameter    ap_ST_fsm_state5 = 28'd16;
parameter    ap_ST_fsm_state6 = 28'd32;
parameter    ap_ST_fsm_state7 = 28'd64;
parameter    ap_ST_fsm_state8 = 28'd128;
parameter    ap_ST_fsm_state9 = 28'd256;
parameter    ap_ST_fsm_state10 = 28'd512;
parameter    ap_ST_fsm_state11 = 28'd1024;
parameter    ap_ST_fsm_state12 = 28'd2048;
parameter    ap_ST_fsm_state13 = 28'd4096;
parameter    ap_ST_fsm_state14 = 28'd8192;
parameter    ap_ST_fsm_state15 = 28'd16384;
parameter    ap_ST_fsm_state16 = 28'd32768;
parameter    ap_ST_fsm_state17 = 28'd65536;
parameter    ap_ST_fsm_state18 = 28'd131072;
parameter    ap_ST_fsm_state19 = 28'd262144;
parameter    ap_ST_fsm_state20 = 28'd524288;
parameter    ap_ST_fsm_state21 = 28'd1048576;
parameter    ap_ST_fsm_state22 = 28'd2097152;
parameter    ap_ST_fsm_state23 = 28'd4194304;
parameter    ap_ST_fsm_state24 = 28'd8388608;
parameter    ap_ST_fsm_state25 = 28'd16777216;
parameter    ap_ST_fsm_state26 = 28'd33554432;
parameter    ap_ST_fsm_state27 = 28'd67108864;
parameter    ap_ST_fsm_state28 = 28'd134217728;
parameter    C_M_AXI_EDGES_ID_WIDTH = 1;
parameter    C_M_AXI_EDGES_ADDR_WIDTH = 64;
parameter    C_M_AXI_EDGES_DATA_WIDTH = 64;
parameter    C_M_AXI_EDGES_AWUSER_WIDTH = 1;
parameter    C_M_AXI_EDGES_ARUSER_WIDTH = 1;
parameter    C_M_AXI_EDGES_WUSER_WIDTH = 1;
parameter    C_M_AXI_EDGES_RUSER_WIDTH = 1;
parameter    C_M_AXI_EDGES_BUSER_WIDTH = 1;
parameter    C_M_AXI_EDGES_USER_VALUE = 0;
parameter    C_M_AXI_EDGES_PROT_VALUE = 0;
parameter    C_M_AXI_EDGES_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_VERTICES_ID_WIDTH = 1;
parameter    C_M_AXI_VERTICES_ADDR_WIDTH = 64;
parameter    C_M_AXI_VERTICES_DATA_WIDTH = 32;
parameter    C_M_AXI_VERTICES_AWUSER_WIDTH = 1;
parameter    C_M_AXI_VERTICES_ARUSER_WIDTH = 1;
parameter    C_M_AXI_VERTICES_WUSER_WIDTH = 1;
parameter    C_M_AXI_VERTICES_RUSER_WIDTH = 1;
parameter    C_M_AXI_VERTICES_BUSER_WIDTH = 1;
parameter    C_M_AXI_VERTICES_USER_VALUE = 0;
parameter    C_M_AXI_VERTICES_PROT_VALUE = 0;
parameter    C_M_AXI_VERTICES_CACHE_VALUE = 3;

parameter C_M_AXI_EDGES_WSTRB_WIDTH = (64 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_VERTICES_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_vertices_AWVALID;
input   m_axi_vertices_AWREADY;
output  [C_M_AXI_VERTICES_ADDR_WIDTH - 1:0] m_axi_vertices_AWADDR;
output  [C_M_AXI_VERTICES_ID_WIDTH - 1:0] m_axi_vertices_AWID;
output  [7:0] m_axi_vertices_AWLEN;
output  [2:0] m_axi_vertices_AWSIZE;
output  [1:0] m_axi_vertices_AWBURST;
output  [1:0] m_axi_vertices_AWLOCK;
output  [3:0] m_axi_vertices_AWCACHE;
output  [2:0] m_axi_vertices_AWPROT;
output  [3:0] m_axi_vertices_AWQOS;
output  [3:0] m_axi_vertices_AWREGION;
output  [C_M_AXI_VERTICES_AWUSER_WIDTH - 1:0] m_axi_vertices_AWUSER;
output   m_axi_vertices_WVALID;
input   m_axi_vertices_WREADY;
output  [C_M_AXI_VERTICES_DATA_WIDTH - 1:0] m_axi_vertices_WDATA;
output  [C_M_AXI_VERTICES_WSTRB_WIDTH - 1:0] m_axi_vertices_WSTRB;
output   m_axi_vertices_WLAST;
output  [C_M_AXI_VERTICES_ID_WIDTH - 1:0] m_axi_vertices_WID;
output  [C_M_AXI_VERTICES_WUSER_WIDTH - 1:0] m_axi_vertices_WUSER;
output   m_axi_vertices_ARVALID;
input   m_axi_vertices_ARREADY;
output  [C_M_AXI_VERTICES_ADDR_WIDTH - 1:0] m_axi_vertices_ARADDR;
output  [C_M_AXI_VERTICES_ID_WIDTH - 1:0] m_axi_vertices_ARID;
output  [7:0] m_axi_vertices_ARLEN;
output  [2:0] m_axi_vertices_ARSIZE;
output  [1:0] m_axi_vertices_ARBURST;
output  [1:0] m_axi_vertices_ARLOCK;
output  [3:0] m_axi_vertices_ARCACHE;
output  [2:0] m_axi_vertices_ARPROT;
output  [3:0] m_axi_vertices_ARQOS;
output  [3:0] m_axi_vertices_ARREGION;
output  [C_M_AXI_VERTICES_ARUSER_WIDTH - 1:0] m_axi_vertices_ARUSER;
input   m_axi_vertices_RVALID;
output   m_axi_vertices_RREADY;
input  [C_M_AXI_VERTICES_DATA_WIDTH - 1:0] m_axi_vertices_RDATA;
input   m_axi_vertices_RLAST;
input  [C_M_AXI_VERTICES_ID_WIDTH - 1:0] m_axi_vertices_RID;
input  [C_M_AXI_VERTICES_RUSER_WIDTH - 1:0] m_axi_vertices_RUSER;
input  [1:0] m_axi_vertices_RRESP;
input   m_axi_vertices_BVALID;
output   m_axi_vertices_BREADY;
input  [1:0] m_axi_vertices_BRESP;
input  [C_M_AXI_VERTICES_ID_WIDTH - 1:0] m_axi_vertices_BID;
input  [C_M_AXI_VERTICES_BUSER_WIDTH - 1:0] m_axi_vertices_BUSER;
output   m_axi_edges_AWVALID;
input   m_axi_edges_AWREADY;
output  [C_M_AXI_EDGES_ADDR_WIDTH - 1:0] m_axi_edges_AWADDR;
output  [C_M_AXI_EDGES_ID_WIDTH - 1:0] m_axi_edges_AWID;
output  [7:0] m_axi_edges_AWLEN;
output  [2:0] m_axi_edges_AWSIZE;
output  [1:0] m_axi_edges_AWBURST;
output  [1:0] m_axi_edges_AWLOCK;
output  [3:0] m_axi_edges_AWCACHE;
output  [2:0] m_axi_edges_AWPROT;
output  [3:0] m_axi_edges_AWQOS;
output  [3:0] m_axi_edges_AWREGION;
output  [C_M_AXI_EDGES_AWUSER_WIDTH - 1:0] m_axi_edges_AWUSER;
output   m_axi_edges_WVALID;
input   m_axi_edges_WREADY;
output  [C_M_AXI_EDGES_DATA_WIDTH - 1:0] m_axi_edges_WDATA;
output  [C_M_AXI_EDGES_WSTRB_WIDTH - 1:0] m_axi_edges_WSTRB;
output   m_axi_edges_WLAST;
output  [C_M_AXI_EDGES_ID_WIDTH - 1:0] m_axi_edges_WID;
output  [C_M_AXI_EDGES_WUSER_WIDTH - 1:0] m_axi_edges_WUSER;
output   m_axi_edges_ARVALID;
input   m_axi_edges_ARREADY;
output  [C_M_AXI_EDGES_ADDR_WIDTH - 1:0] m_axi_edges_ARADDR;
output  [C_M_AXI_EDGES_ID_WIDTH - 1:0] m_axi_edges_ARID;
output  [7:0] m_axi_edges_ARLEN;
output  [2:0] m_axi_edges_ARSIZE;
output  [1:0] m_axi_edges_ARBURST;
output  [1:0] m_axi_edges_ARLOCK;
output  [3:0] m_axi_edges_ARCACHE;
output  [2:0] m_axi_edges_ARPROT;
output  [3:0] m_axi_edges_ARQOS;
output  [3:0] m_axi_edges_ARREGION;
output  [C_M_AXI_EDGES_ARUSER_WIDTH - 1:0] m_axi_edges_ARUSER;
input   m_axi_edges_RVALID;
output   m_axi_edges_RREADY;
input  [C_M_AXI_EDGES_DATA_WIDTH - 1:0] m_axi_edges_RDATA;
input   m_axi_edges_RLAST;
input  [C_M_AXI_EDGES_ID_WIDTH - 1:0] m_axi_edges_RID;
input  [C_M_AXI_EDGES_RUSER_WIDTH - 1:0] m_axi_edges_RUSER;
input  [1:0] m_axi_edges_RRESP;
input   m_axi_edges_BVALID;
output   m_axi_edges_BREADY;
input  [1:0] m_axi_edges_BRESP;
input  [C_M_AXI_EDGES_ID_WIDTH - 1:0] m_axi_edges_BID;
input  [C_M_AXI_EDGES_BUSER_WIDTH - 1:0] m_axi_edges_BUSER;
input  [208:0] req_q_s_dout;
input   req_q_s_empty_n;
output   req_q_s_read;
input  [208:0] req_q_peek_dout;
input   req_q_peek_empty_n;
output   req_q_peek_read;
output  [49:0] resp_q_s_din;
input   resp_q_s_full_n;
output   resp_q_s_write;
input  [49:0] resp_q_peek;
output  [48:0] update_req_q_s_din;
input   update_req_q_s_full_n;
output   update_req_q_s_write;
input  [48:0] update_req_q_peek;
input  [64:0] update_in_q_s_dout;
input   update_in_q_s_empty_n;
output   update_in_q_s_read;
input  [64:0] update_in_q_peek_dout;
input   update_in_q_peek_empty_n;
output   update_in_q_peek_read;
output  [64:0] update_out_q_s_din;
input   update_out_q_s_full_n;
output   update_out_q_s_write;
input  [64:0] update_out_q_peek;
input  [63:0] vertices_offset;
input  [63:0] edges_offset;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg update_in_q_s_read;
reg update_in_q_peek_read;
reg[64:0] update_out_q_s_din;
reg update_out_q_s_write;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [27:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    vertices_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    vertices_blk_n_AW;
wire    ap_CS_fsm_state17;
reg    vertices_blk_n_B;
wire    ap_CS_fsm_state24;
reg   [0:0] is_success_reg_302;
reg   [0:0] icmp_ln175_reg_636;
reg   [0:0] icmp_ln29_reg_651;
reg    req_q_s_blk_n;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state28;
reg    resp_q_s_blk_n;
reg    update_req_q_s_blk_n;
reg    update_in_q_s_blk_n;
wire    ap_CS_fsm_state16;
reg    update_out_q_s_blk_n;
wire    ap_CS_fsm_state27;
reg   [208:0] req_q_s_read_1_reg_593;
wire   [31:0] req_phase_fu_390_p1;
reg   [31:0] req_phase_reg_598;
reg   [14:0] req_base_vid_reg_603;
wire   [31:0] req_num_vertices_fu_404_p4;
reg   [31:0] req_num_vertices_reg_609;
reg   [31:0] req_num_edges_reg_615;
reg   [31:0] req_eid_offset_reg_620;
wire   [47:0] trunc_ln150_fu_434_p1;
reg   [47:0] trunc_ln150_reg_625;
wire   [63:0] zext_ln176_fu_447_p1;
reg   [63:0] zext_ln176_reg_630;
wire   [0:0] icmp_ln175_fu_451_p2;
reg   [61:0] p_cast_reg_640;
wire   [0:0] icmp_ln29_fu_504_p2;
wire    ap_CS_fsm_state13;
reg   [61:0] p_cast5_reg_658;
reg   [14:0] vertices_local_address0;
reg    vertices_local_ce0;
reg    vertices_local_we0;
reg   [31:0] vertices_local_d0;
wire   [31:0] vertices_local_q0;
reg    vertices_local_ce1;
wire   [31:0] vertices_local_q1;
wire    grp_ProcElem_Pipeline_1_fu_324_ap_start;
wire    grp_ProcElem_Pipeline_1_fu_324_ap_done;
wire    grp_ProcElem_Pipeline_1_fu_324_ap_idle;
wire    grp_ProcElem_Pipeline_1_fu_324_ap_ready;
wire    grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWVALID;
wire   [63:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWADDR;
wire   [0:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWID;
wire   [31:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWLEN;
wire   [2:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWSIZE;
wire   [1:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWBURST;
wire   [1:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWLOCK;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWCACHE;
wire   [2:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWPROT;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWQOS;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWREGION;
wire   [0:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWUSER;
wire    grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WVALID;
wire   [31:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WDATA;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WSTRB;
wire    grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WLAST;
wire   [0:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WID;
wire   [0:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WUSER;
wire    grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARVALID;
wire   [63:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARADDR;
wire   [0:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARID;
wire   [31:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARLEN;
wire   [2:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARSIZE;
wire   [1:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARBURST;
wire   [1:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARLOCK;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARCACHE;
wire   [2:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARPROT;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARQOS;
wire   [3:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARREGION;
wire   [0:0] grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARUSER;
wire    grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_RREADY;
wire    grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_BREADY;
wire   [14:0] grp_ProcElem_Pipeline_1_fu_324_vertices_local_address0;
wire    grp_ProcElem_Pipeline_1_fu_324_vertices_local_ce0;
wire    grp_ProcElem_Pipeline_1_fu_324_vertices_local_we0;
wire   [31:0] grp_ProcElem_Pipeline_1_fu_324_vertices_local_d0;
wire    grp_ProcElem_Pipeline_gather_fu_333_ap_start;
wire    grp_ProcElem_Pipeline_gather_fu_333_ap_done;
wire    grp_ProcElem_Pipeline_gather_fu_333_ap_idle;
wire    grp_ProcElem_Pipeline_gather_fu_333_ap_ready;
wire    grp_ProcElem_Pipeline_gather_fu_333_update_in_q_s_read;
wire    grp_ProcElem_Pipeline_gather_fu_333_update_in_q_peek_read;
wire   [14:0] grp_ProcElem_Pipeline_gather_fu_333_vertices_local_address0;
wire    grp_ProcElem_Pipeline_gather_fu_333_vertices_local_ce0;
wire    grp_ProcElem_Pipeline_gather_fu_333_vertices_local_we0;
wire   [31:0] grp_ProcElem_Pipeline_gather_fu_333_vertices_local_d0;
wire   [14:0] grp_ProcElem_Pipeline_gather_fu_333_vertices_local_address1;
wire    grp_ProcElem_Pipeline_gather_fu_333_vertices_local_ce1;
wire   [0:0] grp_ProcElem_Pipeline_gather_fu_333_active_out;
wire    grp_ProcElem_Pipeline_gather_fu_333_active_out_ap_vld;
wire    grp_ProcElem_Pipeline_4_fu_344_ap_start;
wire    grp_ProcElem_Pipeline_4_fu_344_ap_done;
wire    grp_ProcElem_Pipeline_4_fu_344_ap_idle;
wire    grp_ProcElem_Pipeline_4_fu_344_ap_ready;
wire    grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWVALID;
wire   [63:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWADDR;
wire   [0:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWID;
wire   [31:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWLEN;
wire   [2:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWSIZE;
wire   [1:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWBURST;
wire   [1:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWLOCK;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWCACHE;
wire   [2:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWPROT;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWQOS;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWREGION;
wire   [0:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWUSER;
wire    grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WVALID;
wire   [31:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WDATA;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WSTRB;
wire    grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WLAST;
wire   [0:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WID;
wire   [0:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WUSER;
wire    grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARVALID;
wire   [63:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARADDR;
wire   [0:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARID;
wire   [31:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARLEN;
wire   [2:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARSIZE;
wire   [1:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARBURST;
wire   [1:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARLOCK;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARCACHE;
wire   [2:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARPROT;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARQOS;
wire   [3:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARREGION;
wire   [0:0] grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARUSER;
wire    grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_RREADY;
wire    grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_BREADY;
wire   [14:0] grp_ProcElem_Pipeline_4_fu_344_vertices_local_address0;
wire    grp_ProcElem_Pipeline_4_fu_344_vertices_local_ce0;
wire    grp_ProcElem_Pipeline_scatter_fu_353_ap_start;
wire    grp_ProcElem_Pipeline_scatter_fu_353_ap_done;
wire    grp_ProcElem_Pipeline_scatter_fu_353_ap_idle;
wire    grp_ProcElem_Pipeline_scatter_fu_353_ap_ready;
wire    grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWVALID;
wire   [63:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWADDR;
wire   [0:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWID;
wire   [31:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWLEN;
wire   [2:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWSIZE;
wire   [1:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWBURST;
wire   [1:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWLOCK;
wire   [3:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWCACHE;
wire   [2:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWPROT;
wire   [3:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWQOS;
wire   [3:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWREGION;
wire   [0:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWUSER;
wire    grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WVALID;
wire   [63:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WDATA;
wire   [7:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WSTRB;
wire    grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WLAST;
wire   [0:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WID;
wire   [0:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WUSER;
wire    grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARVALID;
wire   [63:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARADDR;
wire   [0:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARID;
wire   [31:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARLEN;
wire   [2:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARSIZE;
wire   [1:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARBURST;
wire   [1:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARLOCK;
wire   [3:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARCACHE;
wire   [2:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARPROT;
wire   [3:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARQOS;
wire   [3:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARREGION;
wire   [0:0] grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARUSER;
wire    grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_RREADY;
wire    grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_BREADY;
wire   [64:0] grp_ProcElem_Pipeline_scatter_fu_353_update_out_q_s_din;
wire    grp_ProcElem_Pipeline_scatter_fu_353_update_out_q_s_write;
wire   [14:0] grp_ProcElem_Pipeline_scatter_fu_353_vertices_local_address0;
wire    grp_ProcElem_Pipeline_scatter_fu_353_vertices_local_ce0;
wire    edges_AWREADY;
wire    edges_WREADY;
reg    edges_ARVALID;
wire    edges_ARREADY;
wire    edges_RVALID;
reg    edges_RREADY;
wire   [63:0] edges_RDATA;
wire   [8:0] edges_RFIFONUM;
wire    edges_BVALID;
reg    vertices_AWVALID;
wire    vertices_AWREADY;
reg   [63:0] vertices_AWADDR;
reg   [31:0] vertices_AWLEN;
reg    vertices_WVALID;
wire    vertices_WREADY;
reg    vertices_ARVALID;
wire    vertices_ARREADY;
reg   [63:0] vertices_ARADDR;
reg   [31:0] vertices_ARLEN;
wire    vertices_RVALID;
reg    vertices_RREADY;
wire   [31:0] vertices_RDATA;
wire   [8:0] vertices_RFIFONUM;
wire    vertices_BVALID;
reg    vertices_BREADY;
wire   [0:0] elem_eot_fu_375_p3;
wire    ap_CS_fsm_state2;
wire   [0:0] grp_nbreadreq_fu_182_p3;
reg   [0:0] ap_phi_mux_is_success_phi_fu_305_p4;
reg   [0:0] ap_phi_mux_active_phi_fu_317_p4;
reg   [0:0] active_reg_313;
reg    ap_predicate_op135_writeresp_state24;
reg    ap_block_state24;
reg    grp_ProcElem_Pipeline_1_fu_324_ap_start_reg;
wire    ap_CS_fsm_state12;
reg    grp_ProcElem_Pipeline_gather_fu_333_ap_start_reg;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_ProcElem_Pipeline_4_fu_344_ap_start_reg;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg    grp_ProcElem_Pipeline_scatter_fu_353_ap_start_reg;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire  signed [63:0] p_cast_cast_fu_494_p1;
wire  signed [63:0] p_cast5_cast_fu_548_p1;
wire   [0:0] req_q_peek_read_nbread_fu_238_p2_0;
reg    req_q_peek_read_local;
reg    ap_block_state3;
reg    ap_block_state28;
reg    req_q_s_read_local;
wire   [48:0] tmp_4_fu_438_p3;
reg   [48:0] update_req_q_s_din_local;
reg    update_req_q_s_write_local;
reg    update_in_q_s_read_local;
wire   [49:0] zext_ln150_fu_565_p1;
reg    resp_q_s_write_local;
reg    update_out_q_s_write_local;
wire   [31:0] tmp_2_fu_457_p4;
wire   [33:0] tmp_3_fu_467_p3;
wire   [63:0] p_cast6_fu_475_p1;
wire   [63:0] empty_74_fu_479_p2;
wire   [31:0] tmp_7_fu_512_p4;
wire   [33:0] tmp_9_fu_521_p3;
wire   [63:0] p_cast7_fu_529_p1;
wire   [63:0] empty_79_fu_533_p2;
wire   [48:0] or_ln150_3_fu_558_p3;
wire   [0:0] and_ln170_fu_384_p2;
reg    ap_block_state13_on_subcall_done;
reg   [27:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
reg    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
reg    ap_ST_fsm_state15_blk;
reg    ap_ST_fsm_state16_blk;
reg    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
reg    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
reg    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
reg    ap_ST_fsm_state26_blk;
reg    ap_ST_fsm_state27_blk;
reg    ap_ST_fsm_state28_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 28'd1;
#0 grp_ProcElem_Pipeline_1_fu_324_ap_start_reg = 1'b0;
#0 grp_ProcElem_Pipeline_gather_fu_333_ap_start_reg = 1'b0;
#0 grp_ProcElem_Pipeline_4_fu_344_ap_start_reg = 1'b0;
#0 grp_ProcElem_Pipeline_scatter_fu_353_ap_start_reg = 1'b0;
end

ProcElem_vertices_local_RAM_T2P_URAM_3R2W #(
    .DataWidth( 32 ),
    .AddressRange( 32768 ),
    .AddressWidth( 15 ))
vertices_local_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(vertices_local_address0),
    .ce0(vertices_local_ce0),
    .we0(vertices_local_we0),
    .d0(vertices_local_d0),
    .q0(vertices_local_q0),
    .address1(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_address1),
    .ce1(vertices_local_ce1),
    .q1(vertices_local_q1)
);

ProcElem_ProcElem_Pipeline_1 grp_ProcElem_Pipeline_1_fu_324(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ProcElem_Pipeline_1_fu_324_ap_start),
    .ap_done(grp_ProcElem_Pipeline_1_fu_324_ap_done),
    .ap_idle(grp_ProcElem_Pipeline_1_fu_324_ap_idle),
    .ap_ready(grp_ProcElem_Pipeline_1_fu_324_ap_ready),
    .m_axi_vertices_AWVALID(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWVALID),
    .m_axi_vertices_AWREADY(1'b0),
    .m_axi_vertices_AWADDR(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWADDR),
    .m_axi_vertices_AWID(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWID),
    .m_axi_vertices_AWLEN(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWLEN),
    .m_axi_vertices_AWSIZE(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWSIZE),
    .m_axi_vertices_AWBURST(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWBURST),
    .m_axi_vertices_AWLOCK(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWLOCK),
    .m_axi_vertices_AWCACHE(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWCACHE),
    .m_axi_vertices_AWPROT(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWPROT),
    .m_axi_vertices_AWQOS(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWQOS),
    .m_axi_vertices_AWREGION(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWREGION),
    .m_axi_vertices_AWUSER(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_AWUSER),
    .m_axi_vertices_WVALID(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WVALID),
    .m_axi_vertices_WREADY(1'b0),
    .m_axi_vertices_WDATA(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WDATA),
    .m_axi_vertices_WSTRB(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WSTRB),
    .m_axi_vertices_WLAST(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WLAST),
    .m_axi_vertices_WID(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WID),
    .m_axi_vertices_WUSER(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_WUSER),
    .m_axi_vertices_ARVALID(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARVALID),
    .m_axi_vertices_ARREADY(vertices_ARREADY),
    .m_axi_vertices_ARADDR(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARADDR),
    .m_axi_vertices_ARID(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARID),
    .m_axi_vertices_ARLEN(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARLEN),
    .m_axi_vertices_ARSIZE(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARSIZE),
    .m_axi_vertices_ARBURST(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARBURST),
    .m_axi_vertices_ARLOCK(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARLOCK),
    .m_axi_vertices_ARCACHE(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARCACHE),
    .m_axi_vertices_ARPROT(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARPROT),
    .m_axi_vertices_ARQOS(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARQOS),
    .m_axi_vertices_ARREGION(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARREGION),
    .m_axi_vertices_ARUSER(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARUSER),
    .m_axi_vertices_RVALID(vertices_RVALID),
    .m_axi_vertices_RREADY(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_RREADY),
    .m_axi_vertices_RDATA(vertices_RDATA),
    .m_axi_vertices_RLAST(1'b0),
    .m_axi_vertices_RID(1'd0),
    .m_axi_vertices_RFIFONUM(vertices_RFIFONUM),
    .m_axi_vertices_RUSER(1'd0),
    .m_axi_vertices_RRESP(2'd0),
    .m_axi_vertices_BVALID(1'b0),
    .m_axi_vertices_BREADY(grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_BREADY),
    .m_axi_vertices_BRESP(2'd0),
    .m_axi_vertices_BID(1'd0),
    .m_axi_vertices_BUSER(1'd0),
    .p_cast_cast(p_cast_reg_640),
    .vertices_local_address0(grp_ProcElem_Pipeline_1_fu_324_vertices_local_address0),
    .vertices_local_ce0(grp_ProcElem_Pipeline_1_fu_324_vertices_local_ce0),
    .vertices_local_we0(grp_ProcElem_Pipeline_1_fu_324_vertices_local_we0),
    .vertices_local_d0(grp_ProcElem_Pipeline_1_fu_324_vertices_local_d0),
    .zext_ln176(req_num_vertices_reg_609)
);

ProcElem_ProcElem_Pipeline_gather grp_ProcElem_Pipeline_gather_fu_333(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ProcElem_Pipeline_gather_fu_333_ap_start),
    .ap_done(grp_ProcElem_Pipeline_gather_fu_333_ap_done),
    .ap_idle(grp_ProcElem_Pipeline_gather_fu_333_ap_idle),
    .ap_ready(grp_ProcElem_Pipeline_gather_fu_333_ap_ready),
    .update_in_q_s_dout(update_in_q_s_dout),
    .update_in_q_s_empty_n(update_in_q_s_empty_n),
    .update_in_q_s_read(grp_ProcElem_Pipeline_gather_fu_333_update_in_q_s_read),
    .update_in_q_peek_dout(update_in_q_peek_dout),
    .update_in_q_peek_empty_n(update_in_q_peek_empty_n),
    .update_in_q_peek_read(grp_ProcElem_Pipeline_gather_fu_333_update_in_q_peek_read),
    .vertices_local_address0(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_address0),
    .vertices_local_ce0(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_ce0),
    .vertices_local_we0(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_we0),
    .vertices_local_d0(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_d0),
    .vertices_local_address1(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_address1),
    .vertices_local_ce1(grp_ProcElem_Pipeline_gather_fu_333_vertices_local_ce1),
    .vertices_local_q1(vertices_local_q1),
    .req_base_vid(req_base_vid_reg_603),
    .active_out(grp_ProcElem_Pipeline_gather_fu_333_active_out),
    .active_out_ap_vld(grp_ProcElem_Pipeline_gather_fu_333_active_out_ap_vld)
);

ProcElem_ProcElem_Pipeline_4 grp_ProcElem_Pipeline_4_fu_344(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ProcElem_Pipeline_4_fu_344_ap_start),
    .ap_done(grp_ProcElem_Pipeline_4_fu_344_ap_done),
    .ap_idle(grp_ProcElem_Pipeline_4_fu_344_ap_idle),
    .ap_ready(grp_ProcElem_Pipeline_4_fu_344_ap_ready),
    .m_axi_vertices_AWVALID(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWVALID),
    .m_axi_vertices_AWREADY(vertices_AWREADY),
    .m_axi_vertices_AWADDR(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWADDR),
    .m_axi_vertices_AWID(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWID),
    .m_axi_vertices_AWLEN(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWLEN),
    .m_axi_vertices_AWSIZE(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWSIZE),
    .m_axi_vertices_AWBURST(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWBURST),
    .m_axi_vertices_AWLOCK(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWLOCK),
    .m_axi_vertices_AWCACHE(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWCACHE),
    .m_axi_vertices_AWPROT(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWPROT),
    .m_axi_vertices_AWQOS(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWQOS),
    .m_axi_vertices_AWREGION(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWREGION),
    .m_axi_vertices_AWUSER(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWUSER),
    .m_axi_vertices_WVALID(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WVALID),
    .m_axi_vertices_WREADY(vertices_WREADY),
    .m_axi_vertices_WDATA(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WDATA),
    .m_axi_vertices_WSTRB(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WSTRB),
    .m_axi_vertices_WLAST(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WLAST),
    .m_axi_vertices_WID(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WID),
    .m_axi_vertices_WUSER(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WUSER),
    .m_axi_vertices_ARVALID(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARVALID),
    .m_axi_vertices_ARREADY(1'b0),
    .m_axi_vertices_ARADDR(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARADDR),
    .m_axi_vertices_ARID(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARID),
    .m_axi_vertices_ARLEN(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARLEN),
    .m_axi_vertices_ARSIZE(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARSIZE),
    .m_axi_vertices_ARBURST(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARBURST),
    .m_axi_vertices_ARLOCK(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARLOCK),
    .m_axi_vertices_ARCACHE(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARCACHE),
    .m_axi_vertices_ARPROT(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARPROT),
    .m_axi_vertices_ARQOS(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARQOS),
    .m_axi_vertices_ARREGION(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARREGION),
    .m_axi_vertices_ARUSER(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_ARUSER),
    .m_axi_vertices_RVALID(1'b0),
    .m_axi_vertices_RREADY(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_RREADY),
    .m_axi_vertices_RDATA(32'd0),
    .m_axi_vertices_RLAST(1'b0),
    .m_axi_vertices_RID(1'd0),
    .m_axi_vertices_RFIFONUM(9'd0),
    .m_axi_vertices_RUSER(1'd0),
    .m_axi_vertices_RRESP(2'd0),
    .m_axi_vertices_BVALID(vertices_BVALID),
    .m_axi_vertices_BREADY(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_BREADY),
    .m_axi_vertices_BRESP(2'd0),
    .m_axi_vertices_BID(1'd0),
    .m_axi_vertices_BUSER(1'd0),
    .p_cast5_cast(p_cast5_reg_658),
    .vertices_local_address0(grp_ProcElem_Pipeline_4_fu_344_vertices_local_address0),
    .vertices_local_ce0(grp_ProcElem_Pipeline_4_fu_344_vertices_local_ce0),
    .vertices_local_q0(vertices_local_q0),
    .zext_ln176(req_num_vertices_reg_609)
);

ProcElem_ProcElem_Pipeline_scatter grp_ProcElem_Pipeline_scatter_fu_353(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_ProcElem_Pipeline_scatter_fu_353_ap_start),
    .ap_done(grp_ProcElem_Pipeline_scatter_fu_353_ap_done),
    .ap_idle(grp_ProcElem_Pipeline_scatter_fu_353_ap_idle),
    .ap_ready(grp_ProcElem_Pipeline_scatter_fu_353_ap_ready),
    .m_axi_edges_AWVALID(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWVALID),
    .m_axi_edges_AWREADY(1'b0),
    .m_axi_edges_AWADDR(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWADDR),
    .m_axi_edges_AWID(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWID),
    .m_axi_edges_AWLEN(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWLEN),
    .m_axi_edges_AWSIZE(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWSIZE),
    .m_axi_edges_AWBURST(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWBURST),
    .m_axi_edges_AWLOCK(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWLOCK),
    .m_axi_edges_AWCACHE(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWCACHE),
    .m_axi_edges_AWPROT(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWPROT),
    .m_axi_edges_AWQOS(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWQOS),
    .m_axi_edges_AWREGION(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWREGION),
    .m_axi_edges_AWUSER(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_AWUSER),
    .m_axi_edges_WVALID(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WVALID),
    .m_axi_edges_WREADY(1'b0),
    .m_axi_edges_WDATA(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WDATA),
    .m_axi_edges_WSTRB(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WSTRB),
    .m_axi_edges_WLAST(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WLAST),
    .m_axi_edges_WID(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WID),
    .m_axi_edges_WUSER(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_WUSER),
    .m_axi_edges_ARVALID(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARVALID),
    .m_axi_edges_ARREADY(edges_ARREADY),
    .m_axi_edges_ARADDR(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARADDR),
    .m_axi_edges_ARID(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARID),
    .m_axi_edges_ARLEN(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARLEN),
    .m_axi_edges_ARSIZE(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARSIZE),
    .m_axi_edges_ARBURST(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARBURST),
    .m_axi_edges_ARLOCK(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARLOCK),
    .m_axi_edges_ARCACHE(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARCACHE),
    .m_axi_edges_ARPROT(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARPROT),
    .m_axi_edges_ARQOS(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARQOS),
    .m_axi_edges_ARREGION(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARREGION),
    .m_axi_edges_ARUSER(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARUSER),
    .m_axi_edges_RVALID(edges_RVALID),
    .m_axi_edges_RREADY(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_RREADY),
    .m_axi_edges_RDATA(edges_RDATA),
    .m_axi_edges_RLAST(1'b0),
    .m_axi_edges_RID(1'd0),
    .m_axi_edges_RFIFONUM(edges_RFIFONUM),
    .m_axi_edges_RUSER(1'd0),
    .m_axi_edges_RRESP(2'd0),
    .m_axi_edges_BVALID(1'b0),
    .m_axi_edges_BREADY(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_BREADY),
    .m_axi_edges_BRESP(2'd0),
    .m_axi_edges_BID(1'd0),
    .m_axi_edges_BUSER(1'd0),
    .update_out_q_s_din(grp_ProcElem_Pipeline_scatter_fu_353_update_out_q_s_din),
    .update_out_q_s_full_n(update_out_q_s_full_n),
    .update_out_q_s_write(grp_ProcElem_Pipeline_scatter_fu_353_update_out_q_s_write),
    .req_num_edges(req_num_edges_reg_615),
    .req_base_vid(req_base_vid_reg_603),
    .vertices_local_address0(grp_ProcElem_Pipeline_scatter_fu_353_vertices_local_address0),
    .vertices_local_ce0(grp_ProcElem_Pipeline_scatter_fu_353_vertices_local_ce0),
    .vertices_local_q0(vertices_local_q0),
    .req_eid_offset(req_eid_offset_reg_620),
    .edges_offset(edges_offset)
);

ProcElem_edges_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_EDGES_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_EDGES_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_EDGES_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_EDGES_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_EDGES_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_EDGES_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_EDGES_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_EDGES_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_EDGES_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_EDGES_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_EDGES_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 64 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 0 ))
edges_m_axi_U(
    .AWVALID(m_axi_edges_AWVALID),
    .AWREADY(m_axi_edges_AWREADY),
    .AWADDR(m_axi_edges_AWADDR),
    .AWID(m_axi_edges_AWID),
    .AWLEN(m_axi_edges_AWLEN),
    .AWSIZE(m_axi_edges_AWSIZE),
    .AWBURST(m_axi_edges_AWBURST),
    .AWLOCK(m_axi_edges_AWLOCK),
    .AWCACHE(m_axi_edges_AWCACHE),
    .AWPROT(m_axi_edges_AWPROT),
    .AWQOS(m_axi_edges_AWQOS),
    .AWREGION(m_axi_edges_AWREGION),
    .AWUSER(m_axi_edges_AWUSER),
    .WVALID(m_axi_edges_WVALID),
    .WREADY(m_axi_edges_WREADY),
    .WDATA(m_axi_edges_WDATA),
    .WSTRB(m_axi_edges_WSTRB),
    .WLAST(m_axi_edges_WLAST),
    .WID(m_axi_edges_WID),
    .WUSER(m_axi_edges_WUSER),
    .ARVALID(m_axi_edges_ARVALID),
    .ARREADY(m_axi_edges_ARREADY),
    .ARADDR(m_axi_edges_ARADDR),
    .ARID(m_axi_edges_ARID),
    .ARLEN(m_axi_edges_ARLEN),
    .ARSIZE(m_axi_edges_ARSIZE),
    .ARBURST(m_axi_edges_ARBURST),
    .ARLOCK(m_axi_edges_ARLOCK),
    .ARCACHE(m_axi_edges_ARCACHE),
    .ARPROT(m_axi_edges_ARPROT),
    .ARQOS(m_axi_edges_ARQOS),
    .ARREGION(m_axi_edges_ARREGION),
    .ARUSER(m_axi_edges_ARUSER),
    .RVALID(m_axi_edges_RVALID),
    .RREADY(m_axi_edges_RREADY),
    .RDATA(m_axi_edges_RDATA),
    .RLAST(m_axi_edges_RLAST),
    .RID(m_axi_edges_RID),
    .RUSER(m_axi_edges_RUSER),
    .RRESP(m_axi_edges_RRESP),
    .BVALID(m_axi_edges_BVALID),
    .BREADY(m_axi_edges_BREADY),
    .BRESP(m_axi_edges_BRESP),
    .BID(m_axi_edges_BID),
    .BUSER(m_axi_edges_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(edges_ARVALID),
    .I_CH0_ARREADY(edges_ARREADY),
    .I_CH0_ARADDR(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARADDR),
    .I_CH0_ARLEN(grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARLEN),
    .I_CH0_RVALID(edges_RVALID),
    .I_CH0_RREADY(edges_RREADY),
    .I_CH0_RDATA(edges_RDATA),
    .I_CH0_RFIFONUM(edges_RFIFONUM),
    .I_CH0_AWVALID(1'b0),
    .I_CH0_AWREADY(edges_AWREADY),
    .I_CH0_AWADDR(64'd0),
    .I_CH0_AWLEN(32'd0),
    .I_CH0_WVALID(1'b0),
    .I_CH0_WREADY(edges_WREADY),
    .I_CH0_WDATA(64'd0),
    .I_CH0_WSTRB(8'd0),
    .I_CH0_BVALID(edges_BVALID),
    .I_CH0_BREADY(1'b0)
);

ProcElem_vertices_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_MAXREQS( 7 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_VERTICES_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_VERTICES_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_VERTICES_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_VERTICES_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_VERTICES_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_VERTICES_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_VERTICES_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_VERTICES_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_VERTICES_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_VERTICES_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_VERTICES_CACHE_VALUE ),
    .CH0_USER_RFIFONUM_WIDTH( 9 ),
    .CH0_USER_DW( 32 ),
    .CH0_USER_AW( 64 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ))
vertices_m_axi_U(
    .AWVALID(m_axi_vertices_AWVALID),
    .AWREADY(m_axi_vertices_AWREADY),
    .AWADDR(m_axi_vertices_AWADDR),
    .AWID(m_axi_vertices_AWID),
    .AWLEN(m_axi_vertices_AWLEN),
    .AWSIZE(m_axi_vertices_AWSIZE),
    .AWBURST(m_axi_vertices_AWBURST),
    .AWLOCK(m_axi_vertices_AWLOCK),
    .AWCACHE(m_axi_vertices_AWCACHE),
    .AWPROT(m_axi_vertices_AWPROT),
    .AWQOS(m_axi_vertices_AWQOS),
    .AWREGION(m_axi_vertices_AWREGION),
    .AWUSER(m_axi_vertices_AWUSER),
    .WVALID(m_axi_vertices_WVALID),
    .WREADY(m_axi_vertices_WREADY),
    .WDATA(m_axi_vertices_WDATA),
    .WSTRB(m_axi_vertices_WSTRB),
    .WLAST(m_axi_vertices_WLAST),
    .WID(m_axi_vertices_WID),
    .WUSER(m_axi_vertices_WUSER),
    .ARVALID(m_axi_vertices_ARVALID),
    .ARREADY(m_axi_vertices_ARREADY),
    .ARADDR(m_axi_vertices_ARADDR),
    .ARID(m_axi_vertices_ARID),
    .ARLEN(m_axi_vertices_ARLEN),
    .ARSIZE(m_axi_vertices_ARSIZE),
    .ARBURST(m_axi_vertices_ARBURST),
    .ARLOCK(m_axi_vertices_ARLOCK),
    .ARCACHE(m_axi_vertices_ARCACHE),
    .ARPROT(m_axi_vertices_ARPROT),
    .ARQOS(m_axi_vertices_ARQOS),
    .ARREGION(m_axi_vertices_ARREGION),
    .ARUSER(m_axi_vertices_ARUSER),
    .RVALID(m_axi_vertices_RVALID),
    .RREADY(m_axi_vertices_RREADY),
    .RDATA(m_axi_vertices_RDATA),
    .RLAST(m_axi_vertices_RLAST),
    .RID(m_axi_vertices_RID),
    .RUSER(m_axi_vertices_RUSER),
    .RRESP(m_axi_vertices_RRESP),
    .BVALID(m_axi_vertices_BVALID),
    .BREADY(m_axi_vertices_BREADY),
    .BRESP(m_axi_vertices_BRESP),
    .BID(m_axi_vertices_BID),
    .BUSER(m_axi_vertices_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_CH0_ARVALID(vertices_ARVALID),
    .I_CH0_ARREADY(vertices_ARREADY),
    .I_CH0_ARADDR(vertices_ARADDR),
    .I_CH0_ARLEN(vertices_ARLEN),
    .I_CH0_RVALID(vertices_RVALID),
    .I_CH0_RREADY(vertices_RREADY),
    .I_CH0_RDATA(vertices_RDATA),
    .I_CH0_RFIFONUM(vertices_RFIFONUM),
    .I_CH0_AWVALID(vertices_AWVALID),
    .I_CH0_AWREADY(vertices_AWREADY),
    .I_CH0_AWADDR(vertices_AWADDR),
    .I_CH0_AWLEN(vertices_AWLEN),
    .I_CH0_WVALID(vertices_WVALID),
    .I_CH0_WREADY(vertices_WREADY),
    .I_CH0_WDATA(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WDATA),
    .I_CH0_WSTRB(grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WSTRB),
    .I_CH0_BVALID(vertices_BVALID),
    .I_CH0_BREADY(vertices_BREADY)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ProcElem_Pipeline_1_fu_324_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state12)) begin
            grp_ProcElem_Pipeline_1_fu_324_ap_start_reg <= 1'b1;
        end else if ((grp_ProcElem_Pipeline_1_fu_324_ap_ready == 1'b1)) begin
            grp_ProcElem_Pipeline_1_fu_324_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ProcElem_Pipeline_4_fu_344_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state18)) begin
            grp_ProcElem_Pipeline_4_fu_344_ap_start_reg <= 1'b1;
        end else if ((grp_ProcElem_Pipeline_4_fu_344_ap_ready == 1'b1)) begin
            grp_ProcElem_Pipeline_4_fu_344_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ProcElem_Pipeline_gather_fu_333_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state14)) begin
            grp_ProcElem_Pipeline_gather_fu_333_ap_start_reg <= 1'b1;
        end else if ((grp_ProcElem_Pipeline_gather_fu_333_ap_ready == 1'b1)) begin
            grp_ProcElem_Pipeline_gather_fu_333_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_ProcElem_Pipeline_scatter_fu_353_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state25)) begin
            grp_ProcElem_Pipeline_scatter_fu_353_ap_start_reg <= 1'b1;
        end else if ((grp_ProcElem_Pipeline_scatter_fu_353_ap_ready == 1'b1)) begin
            grp_ProcElem_Pipeline_scatter_fu_353_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state24) & (icmp_ln29_reg_651 == 1'd0) & (is_success_reg_302 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        active_reg_313 <= grp_ProcElem_Pipeline_gather_fu_333_active_out;
    end else if (((1'b1 == ap_CS_fsm_state27) & (update_out_q_s_full_n == 1'b1))) begin
        active_reg_313 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((grp_nbreadreq_fu_182_p3 == 1'd0)) begin
            is_success_reg_302 <= 1'd0;
        end else if ((grp_nbreadreq_fu_182_p3 == 1'd1)) begin
            is_success_reg_302 <= req_q_peek_read_nbread_fu_238_p2_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln175_reg_636 <= icmp_ln175_fu_451_p2;
        p_cast_reg_640 <= {{empty_74_fu_479_p2[63:2]}};
        req_base_vid_reg_603 <= {{req_q_s_dout[62:48]}};
        req_eid_offset_reg_620 <= {{req_q_s_dout[207:176]}};
        req_num_edges_reg_615 <= {{req_q_s_dout[143:112]}};
        req_num_vertices_reg_609 <= {{req_q_s_dout[111:80]}};
        req_phase_reg_598 <= req_phase_fu_390_p1;
        req_q_s_read_1_reg_593 <= req_q_s_dout;
        trunc_ln150_reg_625 <= trunc_ln150_fu_434_p1;
        zext_ln176_reg_630[31 : 0] <= zext_ln176_fu_447_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln29_reg_651 <= icmp_ln29_fu_504_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        p_cast5_reg_658 <= {{empty_79_fu_533_p2[63:2]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state13_on_subcall_done)) begin
        ap_ST_fsm_state13_blk = 1'b1;
    end else begin
        ap_ST_fsm_state13_blk = 1'b0;
    end
end

assign ap_ST_fsm_state14_blk = 1'b0;

always @ (*) begin
    if ((grp_ProcElem_Pipeline_gather_fu_333_ap_done == 1'b0)) begin
        ap_ST_fsm_state15_blk = 1'b1;
    end else begin
        ap_ST_fsm_state15_blk = 1'b0;
    end
end

always @ (*) begin
    if ((update_in_q_s_empty_n == 1'b0)) begin
        ap_ST_fsm_state16_blk = 1'b1;
    end else begin
        ap_ST_fsm_state16_blk = 1'b0;
    end
end

always @ (*) begin
    if ((vertices_AWREADY == 1'b0)) begin
        ap_ST_fsm_state17_blk = 1'b1;
    end else begin
        ap_ST_fsm_state17_blk = 1'b0;
    end
end

assign ap_ST_fsm_state18_blk = 1'b0;

always @ (*) begin
    if ((grp_ProcElem_Pipeline_4_fu_344_ap_done == 1'b0)) begin
        ap_ST_fsm_state19_blk = 1'b1;
    end else begin
        ap_ST_fsm_state19_blk = 1'b0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state24)) begin
        ap_ST_fsm_state24_blk = 1'b1;
    end else begin
        ap_ST_fsm_state24_blk = 1'b0;
    end
end

assign ap_ST_fsm_state25_blk = 1'b0;

always @ (*) begin
    if ((grp_ProcElem_Pipeline_scatter_fu_353_ap_done == 1'b0)) begin
        ap_ST_fsm_state26_blk = 1'b1;
    end else begin
        ap_ST_fsm_state26_blk = 1'b0;
    end
end

always @ (*) begin
    if ((update_out_q_s_full_n == 1'b0)) begin
        ap_ST_fsm_state27_blk = 1'b1;
    end else begin
        ap_ST_fsm_state27_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state28)) begin
        ap_ST_fsm_state28_blk = 1'b1;
    end else begin
        ap_ST_fsm_state28_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state3)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if ((vertices_ARREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_state28) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_651 == 1'd0) & (is_success_reg_302 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        ap_phi_mux_active_phi_fu_317_p4 = grp_ProcElem_Pipeline_gather_fu_333_active_out;
    end else begin
        ap_phi_mux_active_phi_fu_317_p4 = active_reg_313;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        if ((grp_nbreadreq_fu_182_p3 == 1'd0)) begin
            ap_phi_mux_is_success_phi_fu_305_p4 = 1'd0;
        end else if ((grp_nbreadreq_fu_182_p3 == 1'd1)) begin
            ap_phi_mux_is_success_phi_fu_305_p4 = req_q_peek_read_nbread_fu_238_p2_0;
        end else begin
            ap_phi_mux_is_success_phi_fu_305_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_is_success_phi_fu_305_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state28) & (1'b1 == ap_CS_fsm_state28))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        edges_ARVALID = grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_ARVALID;
    end else begin
        edges_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25))) begin
        edges_RREADY = grp_ProcElem_Pipeline_scatter_fu_353_m_axi_edges_RREADY;
    end else begin
        edges_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((grp_nbreadreq_fu_182_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (req_q_peek_empty_n == 1'b1))) begin
        req_q_peek_read_local = 1'b1;
    end else begin
        req_q_peek_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state3))) begin
        req_q_s_blk_n = req_q_s_empty_n;
    end else begin
        req_q_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state28) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)))) begin
        req_q_s_read_local = 1'b1;
    end else begin
        req_q_s_read_local = 1'b0;
    end
end

always @ (*) begin
    if (((is_success_reg_302 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        resp_q_s_blk_n = resp_q_s_full_n;
    end else begin
        resp_q_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state24) & (is_success_reg_302 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        resp_q_s_write_local = 1'b1;
    end else begin
        resp_q_s_write_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        update_in_q_peek_read = grp_ProcElem_Pipeline_gather_fu_333_update_in_q_peek_read;
    end else begin
        update_in_q_peek_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        update_in_q_s_blk_n = update_in_q_s_empty_n;
    end else begin
        update_in_q_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        update_in_q_s_read = grp_ProcElem_Pipeline_gather_fu_333_update_in_q_s_read;
    end else begin
        update_in_q_s_read = update_in_q_s_read_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) & (update_in_q_s_empty_n == 1'b1))) begin
        update_in_q_s_read_local = 1'b1;
    end else begin
        update_in_q_s_read_local = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        update_out_q_s_blk_n = update_out_q_s_full_n;
    end else begin
        update_out_q_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        update_out_q_s_din = grp_ProcElem_Pipeline_scatter_fu_353_update_out_q_s_din;
    end else begin
        update_out_q_s_din = 65'd18446744073709551616;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        update_out_q_s_write = grp_ProcElem_Pipeline_scatter_fu_353_update_out_q_s_write;
    end else begin
        update_out_q_s_write = update_out_q_s_write_local;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state27) & (update_out_q_s_full_n == 1'b1))) begin
        update_out_q_s_write_local = 1'b1;
    end else begin
        update_out_q_s_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state3))) begin
        update_req_q_s_blk_n = update_req_q_s_full_n;
    end else begin
        update_req_q_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state28) & (1'b1 == ap_CS_fsm_state28))) begin
        update_req_q_s_din_local = 49'd281474976710656;
    end else if (((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3))) begin
        update_req_q_s_din_local = tmp_4_fu_438_p3;
    end else begin
        update_req_q_s_din_local = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state28) & (1'b1 == ap_CS_fsm_state28)) | ((1'b0 == ap_block_state3) & (1'b1 == ap_CS_fsm_state3)))) begin
        update_req_q_s_write_local = 1'b1;
    end else begin
        update_req_q_s_write_local = 1'b0;
    end
end

always @ (*) begin
    if (((vertices_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        vertices_ARADDR = p_cast_cast_fu_494_p1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13))) begin
        vertices_ARADDR = grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARADDR;
    end else begin
        vertices_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((vertices_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        vertices_ARLEN = zext_ln176_reg_630;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13))) begin
        vertices_ARLEN = grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARLEN;
    end else begin
        vertices_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((vertices_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        vertices_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13))) begin
        vertices_ARVALID = grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_ARVALID;
    end else begin
        vertices_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((vertices_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        vertices_AWADDR = p_cast5_cast_fu_548_p1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        vertices_AWADDR = grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWADDR;
    end else begin
        vertices_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((vertices_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        vertices_AWLEN = zext_ln176_reg_630;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        vertices_AWLEN = grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWLEN;
    end else begin
        vertices_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((vertices_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
        vertices_AWVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        vertices_AWVALID = grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_AWVALID;
    end else begin
        vertices_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state24) & (ap_predicate_op135_writeresp_state24 == 1'b1) & (1'b1 == ap_CS_fsm_state24))) begin
        vertices_BREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        vertices_BREADY = grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_BREADY;
    end else begin
        vertices_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13))) begin
        vertices_RREADY = grp_ProcElem_Pipeline_1_fu_324_m_axi_vertices_RREADY;
    end else begin
        vertices_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18))) begin
        vertices_WVALID = grp_ProcElem_Pipeline_4_fu_344_m_axi_vertices_WVALID;
    end else begin
        vertices_WVALID = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        vertices_blk_n_AR = m_axi_vertices_ARREADY;
    end else begin
        vertices_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        vertices_blk_n_AW = m_axi_vertices_AWREADY;
    end else begin
        vertices_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln29_reg_651 == 1'd0) & (icmp_ln175_reg_636 == 1'd1) & (is_success_reg_302 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        vertices_blk_n_B = m_axi_vertices_BVALID;
    end else begin
        vertices_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        vertices_local_address0 = grp_ProcElem_Pipeline_scatter_fu_353_vertices_local_address0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vertices_local_address0 = grp_ProcElem_Pipeline_4_fu_344_vertices_local_address0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        vertices_local_address0 = grp_ProcElem_Pipeline_gather_fu_333_vertices_local_address0;
    end else if (((icmp_ln175_reg_636 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        vertices_local_address0 = grp_ProcElem_Pipeline_1_fu_324_vertices_local_address0;
    end else begin
        vertices_local_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        vertices_local_ce0 = grp_ProcElem_Pipeline_scatter_fu_353_vertices_local_ce0;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        vertices_local_ce0 = grp_ProcElem_Pipeline_4_fu_344_vertices_local_ce0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        vertices_local_ce0 = grp_ProcElem_Pipeline_gather_fu_333_vertices_local_ce0;
    end else if (((icmp_ln175_reg_636 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        vertices_local_ce0 = grp_ProcElem_Pipeline_1_fu_324_vertices_local_ce0;
    end else begin
        vertices_local_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        vertices_local_ce1 = grp_ProcElem_Pipeline_gather_fu_333_vertices_local_ce1;
    end else begin
        vertices_local_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        vertices_local_d0 = grp_ProcElem_Pipeline_gather_fu_333_vertices_local_d0;
    end else if (((icmp_ln175_reg_636 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        vertices_local_d0 = grp_ProcElem_Pipeline_1_fu_324_vertices_local_d0;
    end else begin
        vertices_local_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        vertices_local_we0 = grp_ProcElem_Pipeline_gather_fu_333_vertices_local_we0;
    end else if (((icmp_ln175_reg_636 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        vertices_local_we0 = grp_ProcElem_Pipeline_1_fu_324_vertices_local_we0;
    end else begin
        vertices_local_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_phi_mux_is_success_phi_fu_305_p4 == 1'd0) & (1'd0 == and_ln170_fu_384_p2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((ap_phi_mux_is_success_phi_fu_305_p4 == 1'd1) & (1'd0 == and_ln170_fu_384_p2) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b0 == ap_block_state3) & (icmp_ln175_fu_451_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else if (((1'b0 == ap_block_state3) & (icmp_ln175_fu_451_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((vertices_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b0 == ap_block_state13_on_subcall_done) & (icmp_ln29_fu_504_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end else if (((1'b0 == ap_block_state13_on_subcall_done) & (icmp_ln29_fu_504_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((grp_ProcElem_Pipeline_gather_fu_333_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            if (((icmp_ln175_reg_636 == 1'd0) & (1'b1 == ap_CS_fsm_state16) & (update_in_q_s_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else if (((icmp_ln175_reg_636 == 1'd1) & (1'b1 == ap_CS_fsm_state16) & (update_in_q_s_empty_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((vertices_AWREADY == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((grp_ProcElem_Pipeline_4_fu_344_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            if (((1'b0 == ap_block_state24) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((grp_ProcElem_Pipeline_scatter_fu_353_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state26))) begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end
        end
        ap_ST_fsm_state27 : begin
            if (((1'b1 == ap_CS_fsm_state27) & (update_out_q_s_full_n == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state28 : begin
            if (((1'b0 == ap_block_state28) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln170_fu_384_p2 = (elem_eot_fu_375_p3 & ap_phi_mux_is_success_phi_fu_305_p4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

always @ (*) begin
    ap_block_state13_on_subcall_done = ((grp_ProcElem_Pipeline_1_fu_324_ap_done == 1'b0) & (icmp_ln175_reg_636 == 1'd1));
end

always @ (*) begin
    ap_block_state24 = (((ap_predicate_op135_writeresp_state24 == 1'b1) & (vertices_BVALID == 1'b0)) | ((is_success_reg_302 == 1'd1) & (resp_q_s_full_n == 1'b0)));
end

always @ (*) begin
    ap_block_state28 = ((update_req_q_s_full_n == 1'b0) | (req_q_s_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3 = ((update_req_q_s_full_n == 1'b0) | (req_q_s_empty_n == 1'b0));
end

always @ (*) begin
    ap_predicate_op135_writeresp_state24 = ((icmp_ln29_reg_651 == 1'd0) & (icmp_ln175_reg_636 == 1'd1) & (is_success_reg_302 == 1'd1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign elem_eot_fu_375_p3 = req_q_peek_dout[32'd208];

assign empty_74_fu_479_p2 = (p_cast6_fu_475_p1 + vertices_offset);

assign empty_79_fu_533_p2 = (p_cast7_fu_529_p1 + vertices_offset);

assign grp_ProcElem_Pipeline_1_fu_324_ap_start = grp_ProcElem_Pipeline_1_fu_324_ap_start_reg;

assign grp_ProcElem_Pipeline_4_fu_344_ap_start = grp_ProcElem_Pipeline_4_fu_344_ap_start_reg;

assign grp_ProcElem_Pipeline_gather_fu_333_ap_start = grp_ProcElem_Pipeline_gather_fu_333_ap_start_reg;

assign grp_ProcElem_Pipeline_scatter_fu_353_ap_start = grp_ProcElem_Pipeline_scatter_fu_353_ap_start_reg;

assign grp_nbreadreq_fu_182_p3 = req_q_s_empty_n;

assign icmp_ln175_fu_451_p2 = ((req_num_vertices_fu_404_p4 != 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_504_p2 = ((req_phase_reg_598 == 32'd0) ? 1'b1 : 1'b0);

assign or_ln150_3_fu_558_p3 = {{ap_phi_mux_active_phi_fu_317_p4}, {trunc_ln150_reg_625}};

assign p_cast5_cast_fu_548_p1 = $signed(p_cast5_reg_658);

assign p_cast6_fu_475_p1 = tmp_3_fu_467_p3;

assign p_cast7_fu_529_p1 = tmp_9_fu_521_p3;

assign p_cast_cast_fu_494_p1 = $signed(p_cast_reg_640);

assign req_num_vertices_fu_404_p4 = {{req_q_s_dout[111:80]}};

assign req_phase_fu_390_p1 = req_q_s_dout[31:0];

assign req_q_peek_read = req_q_peek_read_local;

assign req_q_peek_read_nbread_fu_238_p2_0 = req_q_peek_empty_n;

assign req_q_s_read = req_q_s_read_local;

assign resp_q_s_din = zext_ln150_fu_565_p1;

assign resp_q_s_write = resp_q_s_write_local;

assign tmp_2_fu_457_p4 = {{req_q_s_dout[175:144]}};

assign tmp_3_fu_467_p3 = {{tmp_2_fu_457_p4}, {2'd0}};

assign tmp_4_fu_438_p3 = {{1'd0}, {trunc_ln150_fu_434_p1}};

assign tmp_7_fu_512_p4 = {{req_q_s_read_1_reg_593[175:144]}};

assign tmp_9_fu_521_p3 = {{tmp_7_fu_512_p4}, {2'd0}};

assign trunc_ln150_fu_434_p1 = req_q_s_dout[47:0];

assign update_req_q_s_din = update_req_q_s_din_local;

assign update_req_q_s_write = update_req_q_s_write_local;

assign zext_ln150_fu_565_p1 = or_ln150_3_fu_558_p3;

assign zext_ln176_fu_447_p1 = req_num_vertices_fu_404_p4;

always @ (posedge ap_clk) begin
    zext_ln176_reg_630[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //ProcElem
