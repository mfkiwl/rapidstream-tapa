"""The cannon test for TAPA."""

# Copyright (c) 2024 RapidStream Design Automation, Inc. and contributors.
# All rights reserved. The contributor(s) of this file has/have agreed to the
# RapidStream Contributor License Agreement.

load("@rules_cc//cc:defs.bzl", "cc_binary")
load("@rules_shell//shell:sh_test.bzl", "sh_test")
load("//bazel:tapa_rules.bzl", "tapa_xo")

sh_test(
    name = "cannon",
    size = "medium",
    srcs = ["//bazel:v++_env.sh"],
    args = ["$(location cannon-host)"],
    data = [":cannon-host"],
    env = {"TAPA_CONCURRENCY": "2"},
    tags = ["cpu:2"],
)

sh_test(
    name = "cannon-xosim",
    size = "enormous",
    timeout = "long",  # 85s without contention
    srcs = ["//bazel:v++_env.sh"],
    args = [
        "$(location cannon-host)",
        "--scatter_bitstream=$(location scatter)",
        "--proc_elem_bitstream=$(location proc-elem)",
        "--gather_bitstream=$(location gather)",
        "--xosim_executable=$(location //tapa/cosim:tapa-fast-cosim)",
    ],
    data = [
        ":cannon-host",
        ":gather",
        ":proc-elem",
        ":scatter",
        "//tapa/cosim:tapa-fast-cosim",
    ],
    env = {"TAPA_CONCURRENCY": "1"},
    tags = ["cpu:8"],
)

cc_binary(
    name = "cannon-host",
    srcs = [
        "cannon.cpp",
        "cannon.h",
        "//tests/apps/cannon:cannon-host.cpp",
    ],
    defines = ["TAPA_CANNON_P=2"],
    includes = ["."],
    deps = [
        "//tapa-lib:tapa",
        "@gflags",
        "@vitis_hls//:include",
    ],
)

tapa_xo(
    name = "scatter",
    src = "cannon.cpp",
    hdrs = ["cannon.h"],
    include = ["."],
    cflags = "-DTAPA_CANNON_P=2",
    target = "xilinx-hls",
    top_name = "Scatter",
)

tapa_xo(
    name = "proc-elem",
    src = "cannon.cpp",
    hdrs = ["cannon.h"],
    include = ["."],
    cflags = "-DTAPA_CANNON_P=2",
    target = "xilinx-hls",
    top_name = "ProcElem",
)

tapa_xo(
    name = "gather",
    src = "cannon.cpp",
    hdrs = ["cannon.h"],
    include = ["."],
    cflags = "-DTAPA_CANNON_P=2",
    target = "xilinx-hls",
    top_name = "Gather",
)

sh_test(
    name = "cannon-4x4",
    size = "medium",
    srcs = ["//bazel:v++_env.sh"],
    args = ["$(location cannon-host)"],
    data = [":cannon-host"],
    env = {"TAPA_CONCURRENCY": "1"},
)

sh_test(
    name = "cannon-xosim-4x4",
    size = "enormous",
    timeout = "long",  # 125s without contention
    srcs = ["//bazel:v++_env.sh"],
    args = [
        "$(location cannon-host-4x4)",
        "--scatter_bitstream=$(location scatter-4x4)",
        "--proc_elem_bitstream=$(location proc-elem-4x4)",
        "--gather_bitstream=$(location gather-4x4)",
        "--xosim_executable=$(location //tapa/cosim:tapa-fast-cosim)",
    ],
    data = [
        ":cannon-host-4x4",
        ":gather-4x4",
        ":proc-elem-4x4",
        ":scatter-4x4",
        "//tapa/cosim:tapa-fast-cosim",
    ],
    env = {"TAPA_CONCURRENCY": "1"},
    tags = [
        "cpu:20",
        "manual",
    ],
)

cc_binary(
    name = "cannon-host-4x4",
    srcs = [
        "cannon.cpp",
        "cannon.h",
        "//tests/apps/cannon:cannon-host.cpp",
    ],
    defines = ["TAPA_CANNON_P=4"],
    includes = ["."],
    tags = ["manual"],
    deps = [
        "//tapa-lib:tapa",
        "@gflags",
        "@vitis_hls//:include",
    ],
)

tapa_xo(
    name = "scatter-4x4",
    src = "cannon.cpp",
    hdrs = ["cannon.h"],
    include = ["."],
    cflags = "-DTAPA_CANNON_P=4",
    tags = ["manual"],
    target = "xilinx-hls",
    top_name = "Scatter",
)

tapa_xo(
    name = "proc-elem-4x4",
    src = "cannon.cpp",
    hdrs = ["cannon.h"],
    include = ["."],
    cflags = "-DTAPA_CANNON_P=4",
    tags = ["manual"],
    target = "xilinx-hls",
    top_name = "ProcElem",
)

tapa_xo(
    name = "gather-4x4",
    src = "cannon.cpp",
    hdrs = ["cannon.h"],
    include = ["."],
    cflags = "-DTAPA_CANNON_P=4",
    tags = ["manual"],
    target = "xilinx-hls",
    top_name = "Gather",
)
